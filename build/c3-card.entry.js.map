{"version":3,"sources":["src/components/Cards/c3-card.scss?tag=c3-card","src/components/Cards/c3-card.tsx"],"names":["c3CardCss","C3Card","[object Object]","hostRef","this","cardStyle","undefined","cardOrientation","fullBleed","_CARD_HEADER_","_CARD_MEDIA_","_CARD_FOOTER_","_a","root","querySelector","classList","add","isHeaderInline","_c","_b","dataset","inline","headerInline","isHeaderLink","_e","_d","inlineLink","headerLink","_f","_g","_h","remove","_j","cssString","replace","classes","updateHeader","hasHeader","hasMedia","hasFooter","children","length","_CARD_CONTENTS_","Array","from","filter","child","getAttribute","CardHeader","tagName","toLowerCase","CardMedia","CardFooter","CardContent","h","class","Object","assign","cloneElementAttr","innerHTML","map"],"mappings":"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","sourcesContent":["// Import the Base Styles\r\n@import \"card\";\r\n\r\n// Overrides\r\n.c3-card {\r\n    @extend .card;\r\n\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    flex: 1 0 0%;\r\n    margin: 0 0 map-get($spacers, 3);\r\n    background-color: transparent;\r\n    border-radius: 0;\r\n\r\n    .card-body {\r\n        min-height: 1px;\r\n        border-collapse: separate;\r\n        padding: 0;\r\n\r\n        p:last-of-type {\r\n            margin: 0;\r\n        }\r\n\r\n        > .row {\r\n            height: 100%;\r\n            margin: 0;\r\n\r\n            > .col {\r\n                padding: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    .card-media {\r\n        padding: $card-spacer-x $card-spacer-x 0;\r\n\r\n        > * {\r\n            width: 100%;\r\n        }\r\n\r\n        + .card-content {\r\n            padding: $card-spacer-y $card-spacer-x $card-spacer-x;\r\n        }\r\n\r\n        .img-hydrated {\r\n            width: 100%;\r\n        }\r\n\r\n        &.ratio {\r\n            align-self: flex-start;\r\n\r\n            > iframe {\r\n                padding: $card-spacer-x $card-spacer-x 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    .card-header {\r\n        word-break: break-word;\r\n        padding: $card-spacer-y $card-spacer-x;\r\n\r\n        &.fs-6 {\r\n            font-weight: 700;\r\n            font-family: $font-family-sans-serif;\r\n        }\r\n    }\r\n\r\n    .card-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 0 auto;\r\n        justify-content: flex-start;\r\n        padding: $card-spacer-x;\r\n\r\n        // Inline `.card-header` has different styles\r\n        .card-header {\r\n            background-color: transparent;\r\n            border: none;\r\n            padding: 0;\r\n            margin: 0 0 map-get($spacers, 3);\r\n        }\r\n    }\r\n\r\n    .card-footer {\r\n        background-color: #fff;\r\n        border: none;\r\n        border-radius: 0;\r\n        padding: $card-spacer-y 0 0;\r\n        margin-top: auto;\r\n\r\n        .btn {\r\n            margin: 0 map-get($spacers, 3) 0 0;\r\n\r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n        }\r\n\r\n        &:first-child {\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    // Modifier / Prop classes\r\n    /*#region*/\r\n    &_img-left {\r\n        @extend .c3-card;\r\n\r\n        .card-body > .row > .col {\r\n            display: flex;\r\n            flex-direction: row;\r\n            flex-wrap: wrap;\r\n        }\r\n\r\n        .card-media {\r\n            padding: $card-spacer-x;\r\n            flex: 1 0 map-get($column-flex-basis, 5);\r\n            min-width: $card-media-max-width;\r\n\r\n            + .card-content {\r\n                flex: 1 0 map-get($column-flex-basis, 7);\r\n                padding: $card-spacer-x;\r\n            }\r\n\r\n            &.ratio {\r\n                align-self: flex-start;\r\n\r\n                > iframe {\r\n                    padding: $card-spacer-x calc($card-spacer-x / 2) $card-spacer-x $card-spacer-x;\r\n                }\r\n            }\r\n        }\r\n\r\n        .card-content {\r\n            flex: 1 0 100%;\r\n        }\r\n    }\r\n\r\n    &_img-right {\r\n        @extend .c3-card;\r\n\r\n        .card-body > .row > .col {\r\n            display: flex;\r\n            flex-direction: row-reverse;\r\n            flex-wrap: wrap;\r\n        }\r\n\r\n        .card-media {\r\n            padding: $card-spacer-x $card-spacer-x $card-spacer-x calc($card-spacer-x / 2);\r\n            flex: 1 0 map-get($column-flex-basis, 5);\r\n            min-width: $card-media-max-width;\r\n\r\n            + .card-content {\r\n                flex: 1 0 map-get($column-flex-basis, 7);\r\n                padding: $card-spacer-x calc($card-spacer-x / 2) $card-spacer-x $card-spacer-x;\r\n            }\r\n\r\n            &.ratio {\r\n                align-self: flex-start;\r\n\r\n                > iframe {\r\n                    padding: $card-spacer-x $card-spacer-x $card-spacer-x calc($card-spacer-x / 2);\r\n                }\r\n            }\r\n        }\r\n\r\n        .card-content {\r\n            flex: 1 0 100%;\r\n        }\r\n    }\r\n    /*#endregion*/\r\n\r\n    // Compound / Attribute classes\r\n    /*#region*/\r\n    &.header-text-center {\r\n        .card-header {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    &.content-text-center {\r\n        .card-content {\r\n            text-align: center;\r\n        }\r\n\r\n        .card-footer {\r\n            text-align: left;\r\n        }\r\n    }\r\n\r\n    &.footer-text-center {\r\n        .card-footer {\r\n            text-align: center;\r\n        }\r\n    }\r\n    /*#endregion*/\r\n\r\n    // Card themes\r\n    @import \"./assets/scss/_minimal\";\r\n    @import \"./assets/scss/_full-bleed\";\r\n}\r\n\r\n// Card Link\r\n.c3-card-link {\r\n    display: block;\r\n    white-space: $btn-white-space;\r\n    cursor: if($enable-button-pointers, pointer, null);\r\n    user-select: none;\r\n    background-color: $white;\r\n    border: $btn-border-width solid transparent;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    width: 100%;\r\n    height: 100%;\r\n    box-shadow: $box-shadow;\r\n    transform: translateY(0);\r\n    transition: linear all $transition-def;\r\n    @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);\r\n\r\n    > c3-card > div[class^=\"c3-card\"],\r\n    > div[class^=\"c3-card\"] {\r\n        border: none;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n        text-decoration: none;\r\n        box-shadow: $box-shadow-lg;\r\n        transform: translateY(-10px);\r\n        transition: linear all $transition-def;\r\n\r\n        .card-header { color: $gray-dark; }\r\n    }\r\n}\r\n\r\n// Card Grid\r\n.card-grid {\r\n    padding-bottom: map-get($spacers, 4);\r\n\r\n    > div[class^=\"col\"] {\r\n        margin-bottom: map-get($spacers, 4);\r\n\r\n        > .c3-card-link {\r\n            > c3-card > div[class^=\"c3-card\"] {\r\n                height: 100%;\r\n                background-color: $white;\r\n            }\r\n        }\r\n\r\n        > c3-card > div[class^=\"c3-card\"] {\r\n            height: 100%;\r\n        }\r\n    }\r\n\r\n    @include media-breakpoint-down(md) {\r\n        padding-left: calc(0.5 * var(--bs-gutter-x));\r\n        padding-right: calc(0.5 * var(--bs-gutter-x));\r\n    }\r\n}\r\n","import {\r\n    Component, h, ComponentInterface, State, Prop, Element\r\n} from '@stencil/core';\r\nimport {\r\n    cloneElementAttr\r\n} from 'utils';\r\n\r\n@Component({\r\n    tag: 'c3-card',\r\n    styleUrl: 'c3-card.scss',\r\n    shadow: false\r\n})\r\nexport class C3Card implements ComponentInterface {\r\n    @Element() root: HTMLElement;\r\n\r\n    @State() hasHeader: boolean;\r\n\r\n    @State() hasMedia: boolean;\r\n\r\n    @State() hasFooter: boolean;\r\n\r\n    @State() isHeaderInline: boolean;\r\n\r\n    @State() isHeaderLink: boolean;\r\n\r\n    @State() cssString: string;\r\n\r\n    /**\r\n     * The theme of the card, dictacting look / feel\r\n     */\r\n    @Prop() readonly cardStyle: string = undefined;\r\n\r\n    /**\r\n     * Which side of the card the image should render on\r\n     */\r\n    @Prop() readonly cardOrientation: string = undefined;\r\n\r\n    /**\r\n     * Should the card be full bleed?\r\n     */\r\n    @Prop() readonly fullBleed: boolean = false;\r\n\r\n    /**\r\n     * CSS classes to be optionally appended to the wrapper\r\n     */\r\n    @Prop() readonly classes: string;\r\n\r\n    /**\r\n     * Determines if the header is a link\r\n     */\r\n    @Prop() readonly headerLink: boolean;\r\n\r\n    /**\r\n     * Determines if the header is inline\r\n     */\r\n    @Prop() readonly headerInline: boolean;\r\n\r\n    private _CARD_HEADER_: HTMLElement = undefined;\r\n\r\n    private _CARD_MEDIA_: HTMLElement = undefined;\r\n\r\n    private _CARD_FOOTER_: HTMLElement = undefined;\r\n\r\n    private _CARD_CONTENTS_: Array<any>;\r\n\r\n    /**\r\n     * Ensures the header renders correctly depending on whether or not\r\n     * it is inline\r\n     */\r\n    private updateHeader() {\r\n        this.root.querySelector('[slot=\"card-header\"]')?.classList.add('card-header');\r\n\r\n        this.isHeaderInline = (this._CARD_HEADER_?.dataset?.inline !== undefined\r\n            || this.headerInline);\r\n        this.isHeaderLink = (this._CARD_HEADER_?.dataset?.inlineLink !== undefined\r\n            || this.headerLink);\r\n\r\n        if (this.isHeaderLink) {\r\n            this.isHeaderInline = true;\r\n            this._CARD_HEADER_?.classList.add('fake-link');\r\n            this._CARD_HEADER_?.classList.add('fs-6');\r\n        } else {\r\n            this._CARD_HEADER_?.classList.remove('fake-link');\r\n            this._CARD_HEADER_?.classList.remove('fs-6');\r\n        }\r\n    }\r\n\r\n    componentWillRender() {\r\n        this.cssString = 'c3-card';\r\n\r\n        if (this.fullBleed) { this.cssString = `${this.cssString}_full-bleed`; }\r\n\r\n        if (this.cardStyle !== undefined && this.cardStyle !== null) {\r\n            if (this.cardStyle !== 'default') {\r\n                this.cssString = `${this.cssString}_${this.cardStyle}`;\r\n            }\r\n\r\n            if (this.cardStyle === 'minimal' && this.fullBleed) {\r\n                this.cssString = this.cssString.replace('_full-bleed', '');\r\n            }\r\n        }\r\n\r\n        this.cssString = this.cardOrientation !== undefined ? (\r\n            `${this.cssString}_${this.cardOrientation}`\r\n        ) : (\r\n            `${this.cssString}_img-left`\r\n        );\r\n\r\n        if (this.classes !== undefined) {\r\n            this.cssString = `${this.cssString} ${this.classes}`;\r\n        }\r\n\r\n        this.updateHeader();\r\n    }\r\n\r\n    componentWillLoad() {\r\n        this.hasHeader = !!this.root.querySelector('[slot=\"card-header\"]');\r\n        if (this.hasHeader) {\r\n            this._CARD_HEADER_ = this.root.querySelector('[slot=\"card-header\"]');\r\n            this.updateHeader();\r\n            this.root.querySelector('[slot=\"card-header\"]').remove();\r\n        }\r\n\r\n        this.hasMedia = !!this.root.querySelector('[slot=\"card-media\"]');\r\n        if (this.hasMedia) {\r\n            this._CARD_MEDIA_ = this.root.querySelector('[slot=\"card-media\"]');\r\n            this.root.querySelector('[slot=\"card-media\"]').remove();\r\n        }\r\n\r\n        this.hasFooter = !!this.root.querySelector('[slot=\"card-footer\"]');\r\n        if (this.hasFooter) {\r\n            this._CARD_FOOTER_ = this.root.querySelector('[slot=\"card-footer\"]');\r\n            this.root.querySelector('[slot=\"card-footer\"]').remove();\r\n        }\r\n\r\n        if (this.root.children.length > 0) {\r\n            this._CARD_CONTENTS_ = Array.from(this.root.children)\r\n                .filter((child) => !(child.getAttribute('slot')));\r\n        }\r\n    }\r\n\r\n    // componentDidRender() {\r\n    //     globalThis.resizeObserver.observe(this.root.firstElementChild);\r\n    // }\r\n\r\n    render() {\r\n        const CardHeader = this.hasHeader && `${this._CARD_HEADER_.tagName.toLowerCase()}`;\r\n        const CardMedia = this.hasMedia && `${this._CARD_MEDIA_.tagName.toLowerCase()}`;\r\n        const CardFooter = this.hasFooter && `${this._CARD_FOOTER_.tagName.toLowerCase()}`;\r\n        let CardContent;\r\n\r\n        return (\r\n            <div class={this.cssString}>\r\n                {/** BLOCK HEADER */}\r\n                {(\r\n                    this.hasHeader\r\n                    && !(this.cardStyle === 'minimal')\r\n                    && !(this.isHeaderInline)\r\n                ) && (\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <CardHeader {...cloneElementAttr(this._CARD_HEADER_)}>\r\n                                {this._CARD_HEADER_.innerHTML}\r\n                            </CardHeader>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {/** end BLOCK HEADER */}\r\n\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n\r\n                            {/** CARD MEDIA */}\r\n                            {this.hasMedia && (\r\n                                <div\r\n                                    class={`card-media${CardMedia === 'iframe'\r\n                                        ? ' ratio ratio-16x9'\r\n                                        : ''}`}\r\n                                >\r\n                                    <CardMedia\r\n                                        {...cloneElementAttr(this._CARD_MEDIA_)}\r\n                                        innerHTML={this._CARD_MEDIA_.innerHTML}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            {/** end CARD MEDIA */}\r\n\r\n                            <div class=\"card-content\">\r\n                                {/** INLINE HEADER */}\r\n                                {(\r\n                                    this.hasHeader\r\n                                    && (this.cardStyle === 'minimal' || this.isHeaderInline)\r\n                                ) && (\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <CardHeader\r\n                                                {...cloneElementAttr(this._CARD_HEADER_)}\r\n                                                innerHTML={this._CARD_HEADER_.innerHTML}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {/** end INLINE HEADER */}\r\n\r\n                                {/** CONTENT */}\r\n                                {this._CARD_CONTENTS_?.length > 0 && (\r\n                                    this._CARD_CONTENTS_.map((child) => {\r\n                                        CardContent = child.tagName.toLowerCase();\r\n                                        child.remove();\r\n\r\n                                        return (\r\n                                            <CardContent\r\n                                                {...cloneElementAttr(child)}\r\n                                                innerHTML={child.innerHTML}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                )}\r\n                                {/** end CONTENT */}\r\n\r\n                                {/** FOOTER */}\r\n                                {this.hasFooter && (\r\n                                    <div class=\"card-footer\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col\">\r\n                                                <CardFooter\r\n                                                    {...cloneElementAttr(this._CARD_FOOTER_)}\r\n                                                    innerHTML={this._CARD_FOOTER_.innerHTML}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {/** end FOOTER */}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]}